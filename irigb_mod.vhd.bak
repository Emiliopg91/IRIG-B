LIBRARY IEEE;
USE IEEE.STD_LOGIC_1164.ALL;
USE IEEE.STD_LOGIC_ARITH.ALL;
USE IEEE.STD_LOGIC_UNSIGNED.ALL;

ENTITY irigb_mod IS
  PORT(
    clk_in	:IN STD_LOGIC;
    pps_in	:IN STD_LOGIC;
    reset	:IN STD_LOGIC;
    output	:OUT STD_LOGIC;
    
    year	:IN STD_LOGIC_VECTOR(31 DOWNTO 0);
    day		:IN STD_LOGIC_VECTOR(31 DOWNTO 0);
    hour	:IN STD_LOGIC_VECTOR(31 DOWNTO 0);
    min		:IN STD_LOGIC_VECTOR(31 DOWNTO 0);
    sec		:IN STD_LOGIC_VECTOR(31 DOWNTO 0)
  );
END entity irigb_mod;

ARCHITECTURE funcional OF divisor IS
  SIGNAL year_s,day_s,hour_s,min_s,sec_s : INTEGER;
  SIGNAL en : STD_LOGIC_VECTOR := "00";
  VARIABLE ms : INTEGER := 0;
  VARIABLE ind : INTEGER := 0;
  SIGNAL tod : STD_LOGIC_VECTOR(16 DOWNTO 0):="00000000000000";
  SIGNAL sec_c : STD_LOGIC_VECTOR(6 DOWNTO 0):="000000";
  SIGNAL min_c : STD_LOGIC_VECTOR(8 DOWNTO 0):="00000000";
  SIGNAL hor_c : STD_LOGIC_VECTOR(8 DOWNTO 0):="00000000";
  SIGNAL day_c : STD_LOGIC_VECTOR(10 DOWNTO 0):="0000000000";
  SIGNAL yea_c : STD_LOGIC_VECTOR(8 DOWNTO 0):="00000000";
  
BEGIN
  waitPPS:PROCESS(pps_in)
  BEGIN
    IF pps_in'event and pps_in='1' and en(1)='0' THEN
      en<=en+1;
    ENDIF;
  END PROCESS waitPPS;
  
  convert:PROCESS(pps_in)
  BEGIN
  END PROCESS convert;
    
  
  output <= '1' when en and(
		      (ms<8 and (ind=0 or (ind mod 10)=9)) or 
		      (ind>79 and ind<89 and ((ms<2 and tod(ind-80)='0')or(ms<8 and tod(ind-80)='1'))) or
		      (ind>0 and ind<9 and (ms<8 and sec_c(ind-1)='1')) or
		      (ind>9 and ind<19 and (ms<8 and min_c(ind-10)='1')) or
		      (ind>19 and ind<29 and (ms<8 and hor_c(ind-20)='1')) or
		      (ind>29 and ind<39 and (ms<8 and day_c(ind-30)='1')) or
		      (ind>39 and ind<42 and (ms<8 and day_c(ind-31)='1')) or
		      (ind>49 and ind<59 and (ms<8 and yea_c(ind-50)='1')) or
		      ms<2;
		    )
		    
	  
	  else '0';
    
  
END ARCHITECTURE funcional;