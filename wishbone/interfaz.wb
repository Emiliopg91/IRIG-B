peripheral {
  name = "Wishbone IRIG-B";
 
  description = "Wishbone IRIG B004 Implementation";
 
  hdl_entity = "wb_irigb";
 
  c_prefix = "IRIGB";
  hdl_prefix = "IRIGB";
  
  reg {
    name = "Status Control Register";
    description = "Register To Control The Module Status";
    prefix = "STAT";
    clock=pps_in;
    
    field {
      name = "Reset bit";
      description = "When asserted, reset the module";
      prefix = "RES";
      type = BIT;
      access_bus = READ_WRITE;
      access_dev = READ_ONLY;
    };    
    
    field {
      name = "Enable bit";
      description = "When asserted, the module will generate output";
      prefix = "ENA";
      type = BIT;
      access_bus = READ_WRITE;
      access_dev = READ_ONLY;
    };
  };
  
    
  reg {
    name = "Year Data Register";
    description = "Register To Set Year";
    prefix = "YEA";
    clock=pps_in;
      
    field {
      name = "Year value";
      description = "Year data";
      prefix = "YEAR";
      type = SLV;
      size = 32;
      align = 32;
      access_bus = READ_WRITE;
      access_dev = READ_ONLY;
    };
  };
  
  reg {
    name = "Day Data Register";
    description = "Register To Set Day";
    prefix = "DAY";
    clock=pps_in;
      
    field {
      name = "Day value";
      description = "Day data";
      prefix = "Day";
      type = SLV;
      size = 32;
      align = 32;
      access_bus = READ_WRITE;
      access_dev = READ_ONLY;
    };
  }; 
    
  reg {
    name = "Hour Data Register";
    description = "Register To Set Hour";
    prefix = "HOU";
    clock=pps_in;
      
    field {
      name = "Hour value";
      description = "Hour data";
      prefix = "Hou";
      type = SLV;
      size = 32;
      align = 32;
      access_bus = READ_WRITE;
      access_dev = READ_ONLY;
    };
  };
  
  reg {
    name = "Minute Data Register";
    description = "Register To Set Minute";
    prefix = "MIN";
    clock=pps_in;
      
    field {
      name = "Minute value";
      description = "Minute data";
      prefix = "Min";
      type = SLV;
      size = 32;
      align = 32;
      access_bus = READ_WRITE;
      access_dev = READ_ONLY;
    };
  };
    
  reg {
    name = "Second Data Register";
    description = "Register To Set Seconds";
    prefix = "SEC";
    clock=pps_in;
      
    field {
      name = "Second value";
      description = "Second data";
      prefix = "Sec";
      type = SLV;
      size = 32;
      align = 32;
      access_bus = READ_WRITE;
      access_dev = READ_ONLY;
    };
  };
  
  irq {
    name = "Hour update request";
    description = "The interrupt is triggered when 1 hour has elapsed and the module request to update the values.";
    prefix = "hur";
    trigger = EDGE_RISING;
  };
};